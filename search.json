[{"path":"https://stefanocoretta.github.io/rticulate/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 rticulate authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/articles/filter-signals.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Filter signals","text":"vignette illustrates smooth articulator displacement signals using Savitzky-Golay Butterworth filters, resample (usually, upsample) signals. First, let’s attach tidyverse packages rticulate. Now let’s read sample data file it01-dlc.tsv. file contains ultrasound tongue imaging data Italian speaker uttering target words frame sentence. sample data two target words: pata pada. DeepLabCut used track 14 points (knots): 11 points midsagittal tongue surface plus 3 extra points corresponding hyoid bone, base short tendon base mandible. 11 lingual knots form tongue spline. Two extra splines formed line connecting hyoid knot mandible knot (Hyoid-Mandible, HM) line connecting short tendon knot mandible knot (Short tendon-Mandible, STM). DLC-tracked points extracted ultrasonic frame within interval encompasses one syllable preceding target word, target word, one syllable following target word. smoothing displacement tongue knots, let’s filter data. Finally can check mean sampling frequency (frame rate) data. need later, Butterworth filter. mean sampling frequency 67 frames per second, .e. 67 Hz. Let’s take look displacement trajectories knot 8 (tracks tongue blade) along Y axis (roughly indicate tongue blade displacement /hard palate/alveolar ridge. purple rectangle indicates approximately tongue tip gesture second consonant target words pata pada.  displacement trajectories jagged, due imprecisions DLC tracking algorithm. Let’s proceed smooth trajectory using filtering techniques signal processing. , use Savitzky-Golay filter Butterworth filter.","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.4      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(rticulate) library(rcartocolor) it01_dlc_path <- system.file(\"extdata/it01-dlc.tsv\", package = \"rticulate\")  it01_dlc <- read_aaa(it01_dlc_path) |>    # Let's rename some columns.   rename(     date_time = `Date Time of recording`,     time_rec = `Time of sample in recording`,     time_annot = `Time of sample in annot`   ) #> Rows: 521 Columns: 36 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr  (4): Client family name, Date Time of recording, Prompt, Annotation Title #> dbl (32): Time of sample in recording, Time of sample in annot, X0 DLC_Tongu... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  it01_dlc #> # A tibble: 7,815 × 12 #>    `Client family name` date_time  time_rec time_annot Prompt `Annotation Title` #>    <chr>                <chr>         <dbl>      <dbl> <chr>  <chr>              #>  1 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  2 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  3 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  4 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  5 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  6 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  7 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  8 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #>  9 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #> 10 it01                 29/11/201…    0.670     0.0087 Dico … ultrasound         #> # ℹ 7,805 more rows #> # ℹ 6 more variables: knot <dbl>, spline <chr>, X <dbl>, Y <dbl>, #> #   frame_id <int>, displ_id <dbl> it01_tongue <- it01_dlc |>    filter(spline == \"DLC_Tongue\") it01_dlc |>   group_by(displ_id) |>   mutate(dt = time_annot - lag(time_annot)) |>   summarise(mean_dt = mean(dt, na.rm = TRUE)) |>   summarise(mean_fs = round(mean(1/mean_dt))) #> # A tibble: 1 × 1 #>   mean_fs #>     <dbl> #> 1      67 it01_tongue |>    filter(knot == \"8\") |>    ggplot(aes(time_annot, Y, group = date_time)) +   annotate(\"rect\",            ymin = -Inf, ymax = Inf, xmin = 0.3, xmax = 0.5,            alpha = 0.25, fill = \"purple\") +   geom_line()"},{"path":"https://stefanocoretta.github.io/rticulate/articles/filter-signals.html","id":"savitzky-golay-filter","dir":"Articles","previous_headings":"","what":"Savitzky-Golay filter","title":"Filter signals","text":"Savitzky-Golay filter fits local polynomial regressions usually produces great results. user specify polynomial order length moving window used fitting procedure (.e. number consecutive observations use). default order (second-order, 2) generally fine. window length, recommend trying lengths picking length visually generates smoothed curves good compromise smoothing original jagged signal without creating obvious artefacts (different amplitudes peaks valleys). larger window, greater smoothing effect. Note window length dependent sampling frequency: greater sampling frequencies require winder windows. following code, plot result smoothing one signal using window length 5, 7, 8, 11, 15. Ideally want bunch trajectories.  window length 11 15 clearly distorts original signal, 5 7 work generally well. Let’s go 7. ’s important remember group data displ_id mutating, smoothing applied displacement signal individually (, new .argument). can now plot smoothed displacement trajectories top original ones.  Let’s sample 9 trajectories knot.","code":"sg_plot <- it01_tongue |>    filter(displ_id == 29) |>    ggplot(aes(time_annot, Y)) +   geom_line(linetype = \"dashed\")  for (wl in c(5, 7, 9, 11, 15)) {   sg_plot <- sg_plot +     geom_line(       aes(         y = filter_signal(Y, order = 2, window_length = {{ wl }}, apply = 2),         colour = as.factor({{ wl }})       ), linewidth = 1.5, alpha = 0.7     ) }  sg_plot + scale_colour_carto_d(palette = \"Safe\", name = \"Window\\nlength\") it01_tongue <- it01_tongue |>    mutate(     Y_sm = filter_signal(Y, order = 2, window_length = 7, apply = 2),     .by = displ_id   )  it01_tongue |> select(time_annot, Y, Y_sm) #> # A tibble: 5,731 × 3 #>    time_annot     Y  Y_sm #>         <dbl> <dbl> <dbl> #>  1     0.0087  32.9  32.4 #>  2     0.0087  45.6  44.6 #>  3     0.0087  58.9  57.5 #>  4     0.0087  69.6  68.4 #>  5     0.0087  76.5  76.1 #>  6     0.0087  83.3  82.7 #>  7     0.0087  79.4  79.6 #>  8     0.0087  75.9  76.1 #>  9     0.0087  71.9  72.4 #> 10     0.0087  69.0  67.4 #> # ℹ 5,721 more rows it01_tongue |>    filter(knot == \"8\") |>    ggplot(aes(time_annot, Y, group = date_time)) +   geom_line(alpha = 0.25) +   geom_line(aes(y = Y_sm), colour = \"purple\") set.seed(13579) kdi <- sample(unique(it01_tongue$displ_id), 9)  it01_tongue |>    filter(displ_id %in% kdi) |>    ggplot(aes(time_annot, Y)) +   geom_line() +   geom_point(aes(y = Y_sm), colour = \"red\") +   facet_wrap(vars(displ_id), scales = \"free\")"},{"path":"https://stefanocoretta.github.io/rticulate/articles/filter-signals.html","id":"butterworth","dir":"Articles","previous_headings":"","what":"Butterworth","title":"Filter signals","text":"Butterworth filter type band filter set low-pass band filter effectively removes higher frequency fluctuations signal. cut-frequency 10-20 Hz works articulatory signals, ’s sensible try values. go 10 Hz. sampling frequency also specified. Let’s plot Butterworth-smoothed trajectories.  Let’s compare Savitzky-Golay Butterworth filter. produce similar results.","code":"it01_tongue <- it01_tongue |>    mutate(     Y_smb = filter_signal(Y, filter = \"butter\", cutoff_freq = 10, sampling_freq = 67),     .by = displ_id   )  it01_tongue |> select(time_annot, Y, Y_smb) #> # A tibble: 5,731 × 3 #>    time_annot     Y Y_smb #>         <dbl> <dbl> <dbl> #>  1     0.0087  32.9  32.9 #>  2     0.0087  45.6  45.6 #>  3     0.0087  58.9  58.9 #>  4     0.0087  69.6  69.6 #>  5     0.0087  76.5  76.5 #>  6     0.0087  83.3  83.3 #>  7     0.0087  79.4  79.4 #>  8     0.0087  75.9  75.9 #>  9     0.0087  71.9  71.8 #> 10     0.0087  69.0  68.9 #> # ℹ 5,721 more rows it01_tongue |>    filter(knot == \"8\") |>    ggplot(aes(time_annot, Y, group = date_time)) +   geom_line(alpha = 0.25) +   geom_line(aes(y = Y_smb), colour = \"orange\") it01_tongue |>    filter(knot == \"8\") |>    ggplot(aes(time_annot, Y, group = date_time)) +   geom_point(aes(y = Y_sm), pch = 15, size = 2, colour = \"purple\") +   geom_point(aes(y = Y_smb), pch = 18, size = 1, colour = \"white\") +   facet_wrap(vars(displ_id))"},{"path":"https://stefanocoretta.github.io/rticulate/articles/filter-signals.html","id":"resampling","dir":"Articles","previous_headings":"","what":"Resampling","title":"Filter signals","text":"usually good idea upsample smoothed signals especially one wants calculate velocity displacement signal. package rticulate provides users resample_signal() function uses linear interpolation resample signal. section, see upsample displacement signals knot 8. Upsampling linear interpolation means upsampled signal smoothed. end section although procedure one seen . Let’s upsample Y_sm signal. resample_signal() function takes three main arguments: sample resample, Y_sm. column containing time information, time_annot. resampling factor, 3 (meaning sampling rate increased factor 3). Since resampling changes number rows tibble, need use reframe() rather mutate. course need use .argument upsampling done signal individually. Let’s plot knot 8!  looks good, need apply filter get smoother signals interpolation created straight lines.","code":"it01_tongue_up <- it01_tongue |>    reframe(     resample_signal(Y_sm, time_annot, by = 3),     .by = displ_id   )  # Nothing exceptional here, just doing some wrangling to get the info back it01_tongue_up <- it01_tongue_up |>    left_join(y = it01_tongue |> select(Prompt, spline, knot, displ_id) |> distinct()) |>    rename(Y_sm_up = signal_int) #> Joining with `by = join_by(displ_id)`  it01_tongue_up #> # A tibble: 17,193 × 6 #>    displ_id time_int Y_sm_up Prompt               spline      knot #>       <dbl>    <dbl>   <dbl> <chr>                <chr>      <dbl> #>  1        5   0.0087    32.4 Dico pada lentamente DLC_Tongue     0 #>  2        5   0.0136    32.5 Dico pada lentamente DLC_Tongue     0 #>  3        5   0.0185    32.6 Dico pada lentamente DLC_Tongue     0 #>  4        5   0.0234    32.7 Dico pada lentamente DLC_Tongue     0 #>  5        5   0.0283    32.8 Dico pada lentamente DLC_Tongue     0 #>  6        5   0.0331    32.9 Dico pada lentamente DLC_Tongue     0 #>  7        5   0.0380    32.9 Dico pada lentamente DLC_Tongue     0 #>  8        5   0.0429    33.0 Dico pada lentamente DLC_Tongue     0 #>  9        5   0.0478    33.0 Dico pada lentamente DLC_Tongue     0 #> 10        5   0.0527    33.1 Dico pada lentamente DLC_Tongue     0 #> # ℹ 17,183 more rows it01_tongue_up |>    filter(knot == 8) |>    ggplot(aes(time_int, Y_sm_up, group = displ_id)) +   geom_point(alpha = 0.25) +   geom_line() it01_tongue_up <- it01_tongue_up |>    mutate(     Y_sm_up_sm = filter_signal(Y_sm_up, order = 2, window_length = 7, apply = 2),     .by = displ_id   )  it01_tongue_up |>    filter(knot == 8) |>    ggplot(aes(time_int, Y_sm_up_sm, group = displ_id)) +   geom_point(alpha = 0.25) +   geom_line()"},{"path":"https://stefanocoretta.github.io/rticulate/articles/kinematics.html","id":"read-the-data","dir":"Articles","previous_headings":"","what":"Read the data","title":"Kinematics and gestural landmarks","text":"Let’s plot smoothed resampled displacement signal Y axis knot 8 (Blade 2).","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.4     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.4      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(rticulate) it01_dlc_path <- system.file(\"extdata/it01-dlc.tsv\", package = \"rticulate\")  it01_dlc <- read_aaa(it01_dlc_path) |>    # Let's rename some columns.   rename(     date_time = `Date Time of recording`,     time_rec = `Time of sample in recording`,     time_annot = `Time of sample in annot`   ) #> Rows: 521 Columns: 36 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr  (4): Client family name, Date Time of recording, Prompt, Annotation Title #> dbl (32): Time of sample in recording, Time of sample in annot, X0 DLC_Tongu... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. it01_up <- it01_dlc |>    filter(spline == \"DLC_Tongue\") |>    mutate(     Y_sm = filter_signal(Y, order = 2, window_length = 7, apply = 2),     .by = c(displ_id)   ) |>    reframe(     resample_signal(Y_sm, time_annot, by = 3), .by = c(displ_id, knot)   ) |>    mutate(     Y_sm_up = filter_signal(signal_int, window_length = 11, apply = 2),     .by = c(displ_id, knot)   )  it01_up |>    filter(knot == 8) |>    ggplot(aes(time_int, Y_sm_up)) +   geom_point(alpha = 0.2) +   facet_wrap(vars(displ_id))"},{"path":"https://stefanocoretta.github.io/rticulate/articles/kinematics.html","id":"get-the-velocity-of-displacement","dir":"Articles","previous_headings":"","what":"Get the velocity of displacement","title":"Kinematics and gestural landmarks","text":"obtain gestural landmarks, necessary calculate velocity (.e. first derivative) displacement signal. package get_velocity() function calculates velocity signal. Note calculating derivative signal returns vector one item shorter original signal vector get derivative . get_velocity() adds NA beginning output vector correct . following code chunk illustrates use get_velocity() single signal (displ_id = 14) plots results.  black dots represent calculated velocity signal red line absolute velocity (.e. speed). Absolute velocity used get_landmarks() function obtain landmarks (see use function next section). grey area indicates approximate location tongue blade raising lowering sequence /ata/.","code":"it01_up <- it01_up |>    mutate(     Y_sm_up_vel = get_velocity(Y_sm_up)   )  it01_up |>    filter(displ_id == 14) |>    ggplot(aes(time_int, Y_sm_up_vel)) +   geom_point() +   geom_line(aes(y = abs(Y_sm_up_vel)), colour = \"red\") +   annotate(\"rect\", xmin = 0.3, xmax = 0.55, ymin = -Inf, ymax = Inf, alpha = 0.3)"},{"path":"https://stefanocoretta.github.io/rticulate/articles/kinematics.html","id":"gestural-landmarks","dir":"Articles","previous_headings":"","what":"Gestural landmarks","title":"Kinematics and gestural landmarks","text":"following schematics illustrates relation displacement signal, velocity absolute velocity signals, gestural landmarks.  Peak 1 peak 2: peak closing absolute velocity peak opening absolute velocity. time landmarks indicate time displacement reaches maximum (.e. peak) velocity. Maximum displacement: minimum absolute velocity peak 1 2, corresponds time maximum displacement. Gesture onset offset: indicate onset offset closing-opening gesture. calculated time opening absolute velocity peak 1 20% peak 1 absolute velocity time closing absolute velocity peak 2 20% peak 2 absolute velocity. Plateau onset offset: indicate approximate onset offset displacement plateau (articulator minimally moves around time maximum displacement). calculated time absolute velocity maximum displacement 20% peak 1 peak 2 absolute velocities respectively. following code illustrates use get_landmarks() single displacement signal (displ_id == 14). get_landmarks() function function correctly, user select time window within maximum displacement (.e. minimum velocity) searched. window contain velocity minima. consonants, good reference start end consonant closure obtained acoustics. make things easier, selecting single window displacement signals, happens work fine. also recommend run function signal within reduced time window includes opening-closing gesture . help reducing erroneous detection peaks/minima signal. following plots show gestural landmarks overlaid absolute velocity (top) displacement (bottom).   Let’s now get gestural landmarks knot 8 data. finally, let’s plot gestural landmarks!","code":"# Filter signal to include a reduced time window it01_up_win <- it01_up |>   filter(displ_id == 14, time_int > 0.3, time_int < 0.55)  # Get landmarks it01_up_win_land <- get_landmarks(it01_up_win$Y_sm_up_vel, it01_up_win$time_int, 0.4, 0.5) it01_up_win_land_long <- it01_up_win_land |>    pivot_longer(everything(), names_to = \"land\")  it01_up_win_land_long #> # A tibble: 14 × 2 #>    land           value #>    <chr>          <dbl> #>  1 min_1_vel     0.0199 #>  2 peak_1_vel    0.562  #>  3 max_disp_vel  0      #>  4 peak_2_vel    0.494  #>  5 min_3_vel     0      #>  6 min_1_time    0.317  #>  7 peak_1_time   0.390  #>  8 max_disp_time 0.448  #>  9 peak_2_time   0.488  #> 10 min_3_time    0.526  #> 11 GEST_ons      0.336  #> 12 PLAT_ons      0.441  #> 13 PLAT_off      0.454  #> 14 GEST_off      0.522 it01_up_win |>    ggplot(aes(time_int, abs(get_velocity(Y_sm_up)))) +   geom_point(colour = \"red\") +   geom_vline(data = it01_up_win_land_long |> filter(str_detect(land, \"_ons|_off\")), aes(xintercept = value)) +   labs(y = \"Absolute velocity\") it01_up_win |>    ggplot(aes(time_int, Y_sm_up)) +   geom_point() +   geom_vline(data = it01_up_win_land_long |> filter(str_detect(land, \"_ons|_off\")), aes(xintercept = value)) +   labs(y = \"Y displacement\") it01_up_lands <- it01_up |>    filter(knot == 8, time_int > 0.3, time_int < 0.55) |>    reframe(     get_landmarks(Y_sm_up_vel, time_int, 0.35, 0.45),     .by = displ_id   )  it01_up_lands #> # A tibble: 12 × 15 #>    displ_id min_1_vel peak_1_vel max_disp_vel peak_2_vel min_3_vel min_1_time #>       <dbl>     <dbl>      <dbl>        <dbl>      <dbl>     <dbl>      <dbl> #>  1       13    0           0.526      0.00979      0.391         0      0.323 #>  2       28    0.241       0.687      0            0.306         0      0.306 #>  3       43    0           0.549      0            0.397         0      0.311 #>  4       58    0.0676      0.598      0            0.506         0      0.305 #>  5       73    0.113       0.706      0            0.446         0      0.303 #>  6       88    0.212       0.632      0            0.374         0      0.305 #>  7      103    0.166       0.648      0            0.419         0      0.303 #>  8      118    0.513       0.665      0            0.478         0      0.301 #>  9      133    0.393       0.606      0            0.446         0      0.304 #> 10      148    0.533       0.607      0            0.316         0      0.302 #> 11      163    0.389       0.574      0            0.444         0      0.303 #> 12      178    0.410       0.590      0            0.375         0      0.303 #> # ℹ 8 more variables: peak_1_time <dbl>, max_disp_time <dbl>, #> #   peak_2_time <dbl>, min_3_time <dbl>, GEST_ons <dbl>, PLAT_ons <dbl>, #> #   PLAT_off <dbl>, GEST_off <dbl> it01_up_lands_long <- it01_up_lands |>    pivot_longer(-displ_id, names_to = \"land\")  it01_up |>    filter(knot == 8) |>    ggplot(aes(time_int, Y_sm_up)) +   geom_point(alpha = 0.2) +   geom_vline(data = it01_up_lands_long |> filter(str_detect(land, \"_ons|_off\")), aes(xintercept = value)) +   facet_wrap(vars(displ_id)) #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_vline()`)."},{"path":"https://stefanocoretta.github.io/rticulate/articles/polar-gams.html","id":"read-data","dir":"Articles","previous_headings":"","what":"Read data","title":"Using generalised additive models (GAM) with polar coordinates for assessing tongue contours","text":"package rticulate comes dataset containing spline data two speakers Italian.","code":"library(rticulate) data(tongue) tongue #> # A tibble: 3,612 × 28 #>    speaker seconds rec_date            prompt  label TT_displacement TT_velocity #>    <fct>     <dbl> <fct>               <fct>   <fct>           <dbl>       <dbl> #>  1 it01       1.31 29/11/2016 15:10:57 Dico p… max_…            67.1       36.6  #>  2 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 #>  3 it01       1.08 29/11/2016 15:11:25 Dico p… max_…            65.9       21.1  #>  4 it01       1.12 29/11/2016 15:11:35 Dico p… max_…            64.4        8.76 #>  5 it01       1.42 29/11/2016 15:11:57 Dico p… max_…            76.9       -4.72 #>  6 it01       1.35 29/11/2016 15:12:53 Dico p… max_…            78.1       -5.68 #>  7 it01       1.07 29/11/2016 15:13:44 Dico p… max_…            69.9      -40.0  #>  8 it01       1.17 29/11/2016 15:13:49 Dico p… max_…            78.0       -7.31 #>  9 it01       1.28 29/11/2016 15:14:11 Dico p… max_…            67.1       34.5  #> 10 it01       1.10 29/11/2016 15:14:22 Dico p… max_…            75.9      -23.5  #> # ℹ 3,602 more rows #> # ℹ 21 more variables: TT_abs_velocity <dbl>, TD_displacement <dbl>, #> #   TD_velocity <dbl>, TD_abs_velocity <dbl>, TR_displacement <dbl>, #> #   TR_velocity <dbl>, TR_abs_velocity <dbl>, fan_line <int>, X <dbl>, Y <dbl>, #> #   word <fct>, item <dbl>, ipa <fct>, c1 <fct>, c1_phonation <fct>, #> #   vowel <fct>, anteropost <fct>, height <fct>, c2 <fct>, c2_phonation <fct>, #> #   c2_place <fct>"},{"path":"https://stefanocoretta.github.io/rticulate/articles/polar-gams.html","id":"fit-a-polar-gam","dir":"Articles","previous_headings":"","what":"Fit a polar GAM","title":"Using generalised additive models (GAM) with polar coordinates for assessing tongue contours","text":"spline data cartesian coordinates. function polar_gam() converts coordinates polar fits GAM data. Note , unless working method normalise speakers, recommended fit separate models speaker. polar coordinates calculated based origin probe, estimated origin = NULL using fan lines specified argument fan_lines (defaults c(10, 25)). get error relating lm.fit, try change fan_lines values different default. output model polar coordinates contains origin coordinates plotting can done cartesian coordinates.","code":"tongue_it05 <- filter(tongue, speaker == \"it05\", vowel == \"a\", fan_line < 38) %>% droplevels()  polar_place <- polar_gam(   Y ~     s(X, by = c2_place),   data = tongue_it05 ) #> The origin is x = 11.028937677505, y = -53.2813982686628. summary(polar_place) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> Y ~ s(X, by = c2_place) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 62.75772    0.08464   741.5   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                        edf Ref.df     F p-value     #> s(X):c2_placecoronal 4.576  5.614 142.7  <2e-16 *** #> s(X):c2_placevelar   7.993  8.732 372.2  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> R-sq.(adj) =  0.934   Deviance explained = 93.6% #> fREML = 534.93  Scale est. = 2.0697    n = 289"},{"path":"https://stefanocoretta.github.io/rticulate/articles/polar-gams.html","id":"multiple-predictors","dir":"Articles","previous_headings":"","what":"Multiple predictors","title":"Using generalised additive models (GAM) with polar coordinates for assessing tongue contours","text":"possible specify multiple predictors model facet plots.","code":"tongue_it05 <- filter(tongue, speaker == \"it05\", fan_line < 38) %>% droplevels()  polar_multi <- polar_gam(   Y ~     s(X, by = c2_place) +     s(X, by = vowel),   data = tongue_it05 ) #> The origin is x = 11.0276270964655, y = -53.2776157001125. summary(polar_multi) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> Y ~ s(X, by = c2_place) + s(X, by = vowel) #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  61.9700     0.0768   806.9   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                        edf Ref.df      F  p-value     #> s(X):c2_placecoronal 5.583  6.597  3.827 0.000724 *** #> s(X):c2_placevelar   6.925  7.784  8.564  < 2e-16 *** #> s(X):vowela          3.825  4.746  2.219 0.042102 *   #> s(X):vowelo          2.573  3.003  2.176 0.086926 .   #> s(X):vowelu          6.835  7.774 10.861  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Rank: 45/46 #> R-sq.(adj) =  0.915   Deviance explained = 91.8% #> fREML = 1986.9  Scale est. = 5.1237    n = 872"},{"path":"https://stefanocoretta.github.io/rticulate/articles/polar-gams.html","id":"extract-all-predicted-values","dir":"Articles","previous_headings":"","what":"Extract all predicted values","title":"Using generalised additive models (GAM) with polar coordinates for assessing tongue contours","text":"model includes smooths, want control plotting, can use function predict_polar_gam(). function based tidymv::predict_gam(), suggest reader familiarise vignette(\"predict-gam\", package = \"tidymv\"). example, let’s add smooth model used interaction smooth one X. illustrative purposes, set smooth TR_abs_velocity, absolute velocity tongue root time point tongue contour extracted (note analysis might make sense, given show extract predictions). also include random smooth word, exclude later extract predictions. can now obtain predicted tongue contours. set specific values TR_abs_velocity using values argument. Since included random smooth, want remove now, can using exclude_terms. learn argument works detail, see vignette(\"predict-gam\", package = \"tidymv\"). Note filter output remove repeated data (arise excluding term, .e. set coefficient 0). now can plot using standard ggplot2 functions.","code":"polar_2 <- polar_gam(   Y ~     s(X) +     s(X, by = c2_place) +     s(TR_abs_velocity, k = 6) +     ti(X, TR_abs_velocity, k = c(9, 6)) +     s(X, word, bs = \"fs\"),   data = tongue_it05 ) #> The origin is x = 11.0276270964655, y = -53.2776157001125. summary(polar_2) #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> Y ~ s(X) + s(X, by = c2_place) + s(TR_abs_velocity, k = 6) +  #>     ti(X, TR_abs_velocity, k = c(9, 6)) + s(X, word, bs = \"fs\") #>  #> Parametric coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  61.6338     0.5287   116.6   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                           edf Ref.df      F  p-value     #> s(X)                   7.2007  7.672  5.111 5.18e-06 *** #> s(X):c2_placecoronal   1.0000  1.000  2.009 0.156712     #> s(X):c2_placevelar     0.9186  1.069  0.275 0.721573     #> s(TR_abs_velocity)     3.8178  4.436  4.833 0.000333 *** #> ti(X,TR_abs_velocity) 23.0822 28.164  5.503  < 2e-16 *** #> s(X,word)             35.5012 57.000 27.256  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Rank: 132/133 #> R-sq.(adj) =   0.96   Deviance explained = 96.3% #> fREML = 1739.7  Scale est. = 2.4364    n = 872 polar_pred <- predict_polar_gam(   polar_2,   values = list(TR_abs_velocity = seq(2, 24, 5)),   exclude_terms = \"s(X,word)\" ) %>%   filter(word == \"paca\") # filter data by choosing any value for word  polar_pred #> # A tibble: 500 × 6 #>    c2_place TR_abs_velocity word  se.fit     X     Y #>    <fct>              <dbl> <fct>  <dbl> <dbl> <dbl> #>  1 coronal                2 paca    2.78  31.0  9.75 #>  2 coronal                2 paca    2.53  29.6 10.0  #>  3 coronal                2 paca    2.30  28.1 10.3  #>  4 coronal                2 paca    2.10  26.7 10.5  #>  5 coronal                2 paca    1.92  25.2 10.8  #>  6 coronal                2 paca    1.76  23.8 11.0  #>  7 coronal                2 paca    1.62  22.3 11.3  #>  8 coronal                2 paca    1.49  20.9 11.5  #>  9 coronal                2 paca    1.39  19.5 11.8  #> 10 coronal                2 paca    1.32  18.0 12.1  #> # ℹ 490 more rows polar_pred %>%   ggplot(aes(X, Y, colour = as.factor(TR_abs_velocity), linetype = as.factor(TR_abs_velocity))) +   geom_path() +   facet_grid(c2_place ~ .)"},{"path":"https://stefanocoretta.github.io/rticulate/articles/polar-gams.html","id":"plotting-the-curve-with-confidence-intervals","dir":"Articles","previous_headings":"Extract all predicted values","what":"Plotting the curve with confidence intervals","title":"Using generalised additive models (GAM) with polar coordinates for assessing tongue contours","text":"want add confidence intervals fitted curve, get coordinates fitted curves using predict_polar_gam(model) coordinates confidence intervals predict_polar_gam(model, return_ci = TRUE). Now can use prediction dataset global data CI data geom_polygon().","code":"polar_multi_p <- predict_polar_gam(   polar_multi )  ci_data <- predict_polar_gam(   polar_multi,   return_ci = TRUE, ) polar_multi_p %>%   ggplot(aes(X, Y)) +   geom_polygon(data = ci_data, aes(CI_X, CI_Y, group = c2_place), alpha = 0.1) +   geom_path(aes(colour = c2_place)) +   facet_grid(. ~ vowel) +   theme(legend.position = \"top\")"},{"path":"https://stefanocoretta.github.io/rticulate/articles/tongue-imaging.html","id":"import-spline-data","dir":"Articles","previous_headings":"","what":"Import spline data","title":"Import and plot spline data from AAA","text":"function read_aaa() can quickly import spline data transform long format (observation point fan line coordinates values two variables, X Y, see ?tongue details). correctly import AAA data, required file exported AAA contain header. must supplied argument read_aaa() function. thus create character vector concatenation column names strings. Now can use read_aaa() import spline data tibble. function requires string file path name, vector names columns. check head tibble, just : Sometimes useful add extra information prompt (like vowel, consonant place, phonation, etc.). can using functions dplyr package (word() stringr package). Let’s check tongue .","code":"columns <- c(     \"speaker\",     \"seconds\",     \"rec_date\",     \"prompt\",     \"label\",     \"TT_displacement\",     \"TT_velocity\",     \"TT_abs_velocity\",     \"TD_displacement\",     \"TD_velocity\",     \"TD_abs_velocity\" ) # system.file() is needed here because the example files reside in the package. # You can just include the file path directly in read_aaa, like  # read_aaa(\"~/Desktop/splines.tsv\", columns) file_path <- system.file(\"extdata\", \"it01.tsv\", package = \"rticulate\")  tongue <- read_aaa(file_path, knots = 42, column_names = columns) ## Rows: 11 Columns: 95 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \"\\t\" ## chr  (4): speaker, rec_date, prompt, label ## dbl (91): seconds, TT_displacement, TT_velocity, TT_abs_velocity, TD_displac... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## ! Column `Date Time of recording` not found. Did not create a `displ_id` column. ## We recommend to include `Date Time of recording` when exporting data from AAA. tongue ## # A tibble: 462 × 16 ##    speaker seconds rec_date            prompt  label TT_displacement TT_velocity ##    <chr>     <dbl> <chr>               <chr>   <chr>           <dbl>       <dbl> ##  1 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  2 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  3 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  4 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  5 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  6 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  7 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  8 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  9 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ## 10 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ## # ℹ 452 more rows ## # ℹ 9 more variables: TT_abs_velocity <dbl>, TD_displacement <dbl>, ## #   TD_velocity <dbl>, TD_abs_velocity <dbl>, knot <dbl>, spline <chr>, ## #   X <dbl>, Y <dbl>, frame_id <int> stimuli <- read_csv(system.file(\"extdata\", \"stimuli.csv\", package = \"rticulate\")) ## Rows: 12 Columns: 11 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr (10): word, ipa, c1, c1_phonation, vowel, anteropost, height, c2, c2_pho... ## dbl  (1): item ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. tongue <- mutate(tongue, word = word(prompt, 2)) %>%     left_join(y = stimuli) %>%     mutate_if(is.character, as.factor) ## Joining with `by = join_by(word)` tongue ## # A tibble: 462 × 27 ##    speaker seconds rec_date            prompt  label TT_displacement TT_velocity ##    <fct>     <dbl> <fct>               <fct>   <fct>           <dbl>       <dbl> ##  1 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  2 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  3 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  4 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  5 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  6 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  7 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  8 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ##  9 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ## 10 it01       1.20 29/11/2016 15:11:03 Dico p… max_…            77.9       -7.73 ## # ℹ 452 more rows ## # ℹ 20 more variables: TT_abs_velocity <dbl>, TD_displacement <dbl>, ## #   TD_velocity <dbl>, TD_abs_velocity <dbl>, knot <dbl>, spline <fct>, ## #   X <dbl>, Y <dbl>, frame_id <int>, word <fct>, item <dbl>, ipa <fct>, ## #   c1 <fct>, c1_phonation <fct>, vowel <fct>, anteropost <fct>, height <fct>, ## #   c2 <fct>, c2_phonation <fct>, c2_place <fct>"},{"path":"https://stefanocoretta.github.io/rticulate/articles/tongue-imaging.html","id":"plot-splines","dir":"Articles","previous_headings":"","what":"Plot splines","title":"Import and plot spline data from AAA","text":"plot splines spline data frame, use plot_tongue(). function wrapper ggplot call (ggplot2 package). coordinates must two variables named X Y. read_aaa() creates automatically importing raw data.  can also easily filter tibble filter() function dplyr.  can specify geom options aesthetics usual ggplot way (remember load package library(ggplot2) need ). geom options arguments plot_tongue(), aesthetics can called aes().  plot points instead splines, use plot_tongue(geom = \"point\").  Finally, want plot palate profile, can specifying data frame coordinates palate spline.","code":"plot_tongue(tongue) ## `geom_smooth()` using formula = 'y ~ x' filter(tongue, label == \"max_TD\") %>%     plot_tongue() ## `geom_smooth()` using formula = 'y ~ x' plot_tongue(tongue, alpha = 0.5) +     aes(group = rec_date, colour = c2_place) +     theme(legend.position = \"bottom\") ## `geom_smooth()` using formula = 'y ~ x' plot_tongue(tongue, geom = \"point\", alpha = 0.5) +     aes(group = rec_date, colour = c2_place) +     theme(legend.position = \"bottom\") palate <- read_aaa(system.file(\"extdata\", \"it01-palate.tsv\", package = \"rticulate\"), knots = 42, column_names = columns) ## Warning: One or more parsing issues, call `problems()` on your data frame for details, ## e.g.: ##   dat <- vroom(...) ##   problems(dat) ## Rows: 1 Columns: 95 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \"\\t\" ## chr  (3): speaker, rec_date, prompt ## dbl (55): seconds, TT_displacement, TT_velocity, TT_abs_velocity, TD_displac... ## lgl (37): label, X1 NA, Y1 NA, X2 NA, Y2 NA, X3 NA, Y3 NA, X4 NA, Y4 NA, X5 ... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## ! Column `Date Time of recording` not found. Did not create a `displ_id` column. ## We recommend to include `Date Time of recording` when exporting data from AAA. filter(tongue, label == \"max_TD\") %>%     plot_tongue(palate = palate, alpha = 0.5) + aes(group = rec_date) ## `geom_smooth()` using formula = 'y ~ x' ## `geom_smooth()` using formula = 'y ~ x' ## Warning: Removed 18 rows containing non-finite outside the scale range ## (`stat_smooth()`)."},{"path":"https://stefanocoretta.github.io/rticulate/articles/tongue-imaging.html","id":"import-multiple-files","dir":"Articles","previous_headings":"","what":"Import multiple files","title":"Import and plot spline data from AAA","text":"import multiple files AAA data, simply use list paths read_aaa, example using list.files. can now plot splines speakers.","code":"tongue2 <- list.files(     path = system.file(\"extdata\", package = \"rticulate\"),     pattern = \"*\\\\d{2}.tsv\",     full.names = TRUE     ) %>%     read_aaa(., knots = 42, column_names = columns) ## Rows: 11 Columns: 95 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \"\\t\" ## chr  (4): speaker, rec_date, prompt, label ## dbl (91): seconds, TT_displacement, TT_velocity, TT_abs_velocity, TD_displac... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## ! Column `Date Time of recording` not found. Did not create a `displ_id` column. ## We recommend to include `Date Time of recording` when exporting data from AAA. ##  ## Rows: 8 Columns: 95 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \"\\t\" ## chr  (4): speaker, rec_date, prompt, label ## dbl (91): seconds, TT_displacement, TT_velocity, TT_abs_velocity, TD_displac... ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## ! Column `Date Time of recording` not found. Did not create a `displ_id` column. ## We recommend to include `Date Time of recording` when exporting data from AAA. plot_tongue(tongue2, alpha = 0.5) +     aes(group = rec_date) +     facet_grid(. ~ speaker) ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://stefanocoretta.github.io/rticulate/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefano Coretta. Author, maintainer.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Coretta S (2025). rticulate: Ultrasound Tongue Imaging. R package version 2.0.0, https://stefanocoretta.github.io/rticulate/, https://github.com/stefanocoretta/rticulate.","code":"@Manual{,   title = {rticulate: Ultrasound Tongue Imaging},   author = {Stefano Coretta},   year = {2025},   note = {R package version 2.0.0, https://stefanocoretta.github.io/rticulate/},   url = {https://github.com/stefanocoretta/rticulate}, }"},{"path":"https://stefanocoretta.github.io/rticulate/index.html","id":"rticulate-ultrasound-tongue-imaging-in-r-","dir":"","previous_headings":"","what":"Ultrasound Tongue Imaging","title":"Ultrasound Tongue Imaging","text":"repository R package rticulate. package provides two functions importing UTI data Articulate Assistant Advanced plotting UTI data source.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ultrasound Tongue Imaging","text":"package CRAN, can install install.packages(\"rticulate\"). like living edge, install polished pre-release : development version :","code":"remotes::install_github(   \"stefanocoretta/rticulate\",   build_vignettes = TRUE ) remotes::install_github(   \"stefanocoretta/rticulate@devel\",   build_vignettes = TRUE )"},{"path":"https://stefanocoretta.github.io/rticulate/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Ultrasound Tongue Imaging","text":"learn basic use package, run vignette(\"tongue-imaging\", package = \"rticulate\") installation.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/filter_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a signal — filter_signal","title":"Filter a signal — filter_signal","text":"Filter signal","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/filter_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a signal — filter_signal","text":"","code":"filter_signal(   signal,   filter = \"sgolay\",   order = 2,   window_length = NULL,   cutoff_freq = NULL,   sampling_freq = NULL,   type = \"low\",   apply = 1 )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/filter_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a signal — filter_signal","text":"signal Signal filter. filter Type filter (default \"sgolay\", \"butter\"). order Order filter. window_length Window length Savitzky-Golay filter. cutoff_freq Cut-frequency Butterworth filter. sampling_freq Sampling frequency signal. type Butterworth band type (default \"low\"). apply Apply filter N times (default 1).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/filter_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a signal — filter_signal","text":"filtered signal.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/geom_polar_ci-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar confidence intervals. — geom_polar_ci-deprecated","title":"Polar confidence intervals. — geom_polar_ci-deprecated","text":"provides `geom` plotting polar confidence intervals output predict_polar_gam argument return_ci = true.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/geom_polar_ci-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar confidence intervals. — geom_polar_ci-deprecated","text":"","code":"geom_polar_ci(data, group, ci_z, ci_alpha)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/geom_polar_ci-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar confidence intervals. — geom_polar_ci-deprecated","text":"data tibble output predict_polar_gam argument return_ci = true. group optional grouping factor. ci_z z-value calculating CIs (default 1.96 95 percent CI). ci_alpha Transparency value CIs (default 0.1).","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_acceleration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get acceleration of displacement — get_acceleration","title":"Get acceleration of displacement — get_acceleration","text":"Get acceleration displacement","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_acceleration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get acceleration of displacement — get_acceleration","text":"","code":"get_acceleration(signal)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_acceleration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get acceleration of displacement — get_acceleration","text":"signal signal get acceleration .","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_acceleration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get acceleration of displacement — get_acceleration","text":"vector second derivative signal.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_landmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gestural landmarks — get_landmarks","title":"Get gestural landmarks — get_landmarks","text":"Get gestural landmarks","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_landmarks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gestural landmarks — get_landmarks","text":"","code":"get_landmarks(signal_vel, time, start, end, threshold = 0.2)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_landmarks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gestural landmarks — get_landmarks","text":"signal_vel velocity displacement signal. time time signal. start Start time interval search maximum displacement. end End time interval search maximum displacement. threshold velocity threshold (default 0.2, corresponding 20 percent velocity.)","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_landmarks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gestural landmarks — get_landmarks","text":"tibble one row column gestural landmark.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the origin of spline data — get_origin","title":"Get the origin of spline data — get_origin","text":"returns Cartesian x, y coordinates virtual origin ultrasonic waves/probe surface (see Details).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the origin of spline data — get_origin","text":"","code":"get_origin(data, fan_lines = c(10, 25))"},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the origin of spline data — get_origin","text":"data spline data (cartesian coordinates must two columns named X Y). fan_lines numeric vector two fan lines (default c(10, 25)).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the origin of spline data — get_origin","text":"numeric vector Cartesian (x, y) coordinates virtual origin   ultrasonic waves/probe surface.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the origin of spline data — get_origin","text":"function estimates origin ultrasound waves probe using spline data provided fan lines. estimation method based Heyne, Matthias & Donald Derrick (2015) Using radial ultrasound probe's virtual origin compute midsagittal smoothing splines polar coordinates. Journal Acoustical Society America 138(6), EL509–EL514, DOI:10.1121/1.4937168.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_origin.html","id":"origin-estimation","dir":"Reference","previous_headings":"","what":"Origin estimation","title":"Get the origin of spline data — get_origin","text":"equations two fan lines (10 25   default) set equal find intersection. intersection   origin. cases, linear estimation equation fails,   error related fit returned. cases, try different fan lines   increasing minimum fan line /changing maximum fan line   (example, c(10, 25) returns error, try c(15, 30)).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_velocity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get velocity of displacement — get_velocity","title":"Get velocity of displacement — get_velocity","text":"Get velocity displacement","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_velocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get velocity of displacement — get_velocity","text":"","code":"get_velocity(signal)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_velocity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get velocity of displacement — get_velocity","text":"signal signal get velocity .","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/get_velocity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get velocity of displacement — get_velocity","text":"vector first derivative signal.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/palate.html","id":null,"dir":"Reference","previous_headings":"","what":"Palate profile dataset. — palate","title":"Palate profile dataset. — palate","text":"dataset containing palate profile single speaker.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/palate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palate profile dataset. — palate","text":"","code":"palate"},{"path":"https://stefanocoretta.github.io/rticulate/reference/palate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Palate profile dataset. — palate","text":"data frame 42 rows 14 variables. speaker speaker ID seconds time coordinate, seconds rec_date date time recording prompt prompt string label label annotation TT_displacement smoothed displacement tongue tip TT_velocity velocity tongue tip displacement TT_abs_velocity absolute velocity tongue tip displacement TD_displacement smoothed displacement tongue dorsum TD_velocity velocity tongue dorsum displacement TD_abs_velocity absolute velocity tongue dorsum displacement fan_line fan line number X horizontal coordinate time seconds Y vertical coordinate time seconds","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_polar_smooths-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot smooths from a polar gam — plot_polar_smooths-deprecated","title":"Plot smooths from a polar gam — plot_polar_smooths-deprecated","text":"plots smooths polar GAM fitted polar_gam().","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_polar_smooths-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot smooths from a polar gam — plot_polar_smooths-deprecated","text":"split Columns separate named list. sep Separator columns (default \"\\.\", default ). character, interpreted regular expression.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_polar_smooths-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot smooths from a polar gam — plot_polar_smooths-deprecated","text":"object class ggplot.","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_tongue.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tongue contours from spline data. — plot_tongue","title":"Plot tongue contours from spline data. — plot_tongue","text":"plots tongue contours data imported AAA.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_tongue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tongue contours from spline data. — plot_tongue","text":"","code":"plot_tongue(data, geom = \"line\", ..., palate = NULL, palate_col = \"green\")"},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_tongue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tongue contours from spline data. — plot_tongue","text":"data data frame splines data. geom Type geom plot. Possible values : line (default), point, path. ... List arguments passed geom. palate optional data frame palate spline. provided, palate plotted. palate_col colour palate spline (default green).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_tongue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tongue contours from spline data. — plot_tongue","text":"object class ggplot.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/plot_tongue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot tongue contours from spline data. — plot_tongue","text":"","code":"plot_tongue(tongue, geom = \"point\") #> Warning: Removed 607 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar generalised additive model (polar GAM) — polar_gam","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"fits generalised additive model (GAM) transformed polar tongue data returns model polar coordinates. Use plot_polar_smooths() plotting.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"","code":"polar_gam(   formula,   data,   origin = NULL,   fan_lines = c(10, 25),   AR_start = NULL,   ... )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"formula GAM formula. data data set containing spline coordinates (cartesian coordinates must columns named X Y, polar coordinates columns named angle radius; defaults data imported read_aaa()). origin coordinates origin vector c(x, y) coordinates. fan_lines numeric vector two fan lines (default c(10, 25)). AR_start AR.start argument passed mgcv::bam(). ... Arguments passed mgcv::bam().","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"object class \"gam\" described   gamObject.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"advised fit separate model per speaker, unless working method inter-speaker normalisation coordinates.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/polar_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar generalised additive model (polar GAM) — polar_gam","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union tongue_it01 <- filter(tongue, speaker == \"it01\") pgam <- polar_gam(Y ~ s(X, by = c2_place) + s(X, word, bs = \"fs\"), data = tongue_it01) #> The origin is x = 14.3901267816422, y = -65.2315420525846. # }"},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all predictions from a polar GAM model — predict_polar_gam","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"returns tibble predictions terms polar_gam model.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"","code":"predict_polar_gam(   model,   origin = NULL,   exclude_terms = NULL,   length_out = 50,   values = NULL,   return_ci = FALSE,   ci_z = 1.96 )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"model polar_gam model object. origin coordinates origin vector c(x, y) coordinates. exclude_terms Terms excluded prediction. Term names given appear model summary (example, \"s(x0,x1)\"). length_out integer indicating many values along numeric predictors use predicting outcome term (default 50). values User supplied values numeric terms named list. return_ci Whether return tibble cartesian confidence intervals (use geom_polar_ci). ci_z z-value calculating CIs (default 1.96 95 percent CI).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"tibble predictions polar_gam model.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"function converts coordinates polar cartesian automatically. see example plotting, see examples geom_polar_ci.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/predict_polar_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all predictions from a polar GAM model — predict_polar_gam","text":"","code":"# \\donttest{ library(dplyr) tongue_it01 <- filter(tongue, speaker == \"it01\") it01_pol <- polar_gam(Y ~ s(X, by = c2_place) + s(X, word, bs = \"fs\"), data = tongue_it01) #> The origin is x = 14.3901267816422, y = -65.2315420525846.  # get predictions it01_pred <- predict_polar_gam(it01_pol)  # get predictions excluding the random smooth for word (the coefficient for # the random smooth is set to 0) it01_excl_rand <- predict_polar_gam(it01_pol, exclude_terms = \"s(X,word)\") # }"},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tab separated files with AAA spline data. — read_aaa","title":"Read tab separated files with AAA spline data. — read_aaa","text":"reads file list files data exported AAA. data automatically transformed wide long format (row values X Y axes fan line). imported tibble can used plotting statistical analysis.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tab separated files with AAA spline data. — read_aaa","text":"","code":"read_aaa(   file,   coordinates = \"cartesian\",   format = \"long\",   na_rm = FALSE,   knots = NULL,   column_names = NULL )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tab separated files with AAA spline data. — read_aaa","text":"file path file AAA data. can also character vector multiple paths separate strings.. coordinates string specifying coordinate system. Possible values \"cartesian\" (default) \"polar\". format string specifying data format. Possible values \"long\" \"wide\" (default \"long\"). na_rm Remove NAs (default FALSE). knots number spline knots fan lines. column_names names columns without including splines columns.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tab separated files with AAA spline data. — read_aaa","text":"tibble.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read tab separated files with AAA spline data. — read_aaa","text":"","code":"columns <- c(\"speaker\",\"seconds\",\"rec_date\",\"prompt\",\"label\", \"TT_displacement\",\"TT_velocity\",\"TT_abs_velocity\",\"TD_displacement\", \"TD_velocity\",\"TD_abs_velocity\") file_path <- system.file(\"extdata\", \"it01.tsv\", package = \"rticulate\")  tongue <- read_aaa(file_path, knots = 42, column_names = columns) #> Rows: 11 Columns: 95 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr  (4): speaker, rec_date, prompt, label #> dbl (91): seconds, TT_displacement, TT_velocity, TT_abs_velocity, TD_displac... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ! Column `Date Time of recording` not found. Did not create a `displ_id` column. #> We recommend to include `Date Time of recording` when exporting data from AAA."},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data import function. — read_aaa_data","title":"Data import function. — read_aaa_data","text":"reads file data exported AAA. data automatically transformed wide long format (row values X Y axes fan line). imported tibble can used plotting statistical analysis.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data import function. — read_aaa_data","text":"","code":"read_aaa_data(   file,   coordinates = \"cartesian\",   format = \"long\",   na_rm = TRUE,   knots = NULL,   column_names = NULL )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data import function. — read_aaa_data","text":"file file files AAA data. coordinates string specifying coordinate system. Possible values \"cartesian\" \"polar\". format string specifying data format. Possible values \"long\" \"wide\" (default \"long\"). na_rm Remove NAs. knots number spline knots. column_names names columns without including splines columns.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_aaa_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data import function. — read_aaa_data","text":"object class tbl_df-class (tibble).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_ag500_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Read EMA data from AG500 pos files — read_ag500_pos","title":"Read EMA data from AG500 pos files — read_ag500_pos","text":"Read EMA data AG500 pos files","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_ag500_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read EMA data from AG500 pos files — read_ag500_pos","text":"","code":"read_ag500_pos(path, channels = 12, ch_values = 7, bytes = 4, fs = 200)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_ag500_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read EMA data from AG500 pos files — read_ag500_pos","text":"path Path .pos file. channels Number channels (default 12). ch_values Number values per channel (default 7). bytes Number bytes per value (default 4). fs Sampling frequency (default 200 Hz).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/read_ag500_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read EMA data from AG500 pos files — read_ag500_pos","text":"tibble.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/resample_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample (up or down) a signal — resample_signal","title":"Resample (up or down) a signal — resample_signal","text":"Resample () signal","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/resample_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample (up or down) a signal — resample_signal","text":"","code":"resample_signal(   signal,   time,   by = 2,   to = NULL,   from = NULL,   method = \"interpolation\" )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/resample_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample (up or down) a signal — resample_signal","text":"signal signal resample. time time vector signal resample. factor resample signal (default 2). frequency resample . original sampling frequency. method Resampling method (default interpolate uses approx).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/resample_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample (up or down) a signal — resample_signal","text":"list resampled signal time methdo = \"interpolate\".","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package rticulate. — plot_polar_smooths","title":"Deprecated functions in package rticulate. — plot_polar_smooths","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"-deprecated\").","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package rticulate. — plot_polar_smooths","text":"","code":"plot_polar_smooths(   model,   series,   comparison = NULL,   origin = NULL,   facet_terms = NULL,   conditions = NULL,   exclude_random = TRUE,   series_length = 100,   split = NULL,   sep = \"\\\\.\",   time_series )  geom_polar_ci(data, group = NULL, ci_z = 1.96, ci_alpha = 0.1)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package rticulate. — plot_polar_smooths","text":"Nothing. Used document deprecated functions.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-deprecated.html","id":"geom-polar-ci-","dir":"Reference","previous_headings":"","what":"geom_polar_ci()","title":"Deprecated functions in package rticulate. — plot_polar_smooths","text":"geom_polar_ci(), see vignette(\"polar-gams\", package = \"rticulate\").","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rticulate: Ultrasound Tongue Imaging — rticulate-package","title":"rticulate: Ultrasound Tongue Imaging — rticulate-package","text":"tool processing Articulate Assistant Advanced™ (AAA) export files plot tongue contour data system.","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/reference/rticulate-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rticulate: Ultrasound Tongue Imaging — rticulate-package","text":"Maintainer: Stefano Coretta stefano.coretta@gmail.com","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/stimuli.html","id":null,"dir":"Reference","previous_headings":"","what":"Stimuli dataset. — stimuli","title":"Stimuli dataset. — stimuli","text":"dataset linguistic information stimuli.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/stimuli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stimuli dataset. — stimuli","text":"","code":"stimuli"},{"path":"https://stefanocoretta.github.io/rticulate/reference/stimuli.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stimuli dataset. — stimuli","text":"data frame 12 rows 11 variables. item item ID word words form CVCV ipa IPA transcription words c1 first consonant c1_phonation phonation first consonant, voiceless vowel first second vowel anteropost backness vowel, back central height height vowel, high, mid low c2 second consonant c2_phonation phonation second consonant, voiceless voiced c2_place place second consonant, coronal velar","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/tongue.html","id":null,"dir":"Reference","previous_headings":"","what":"Tongue contours dataset. — tongue","title":"Tongue contours dataset. — tongue","text":"dataset containing tongue contour coordinates single speaker.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/tongue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tongue contours dataset. — tongue","text":"","code":"tongue"},{"path":"https://stefanocoretta.github.io/rticulate/reference/tongue.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tongue contours dataset. — tongue","text":"data frame 3612 rows 28 variables. speaker speaker ID seconds time coordinate, seconds rec_date date time recording prompt prompt string label label annotation TT_displacement smoothed displacement tongue tip TT_velocity velocity tongue tip displacement TT_abs_velocity absolute velocity tongue tip displacement TD_displacement smoothed displacement tongue dorsum TD_velocity velocity tongue dorsum displacement TD_abs_velocity absolute velocity tongue dorsum displacement TR_displacement smoothed displacement tongue root TR_velocity velocity tongue root displacement TR_abs_velocity absolute velocity tongue root displacement fan_line fan line number X horizontal coordinate time seconds Y vertical coordinate time seconds word words form CVCV item item ID ipa IPA transcription words c1 first consonant c1_phonation phonation first consonant, voiceless vowel first second vowel anteropost backness vowel, back central height height vowel, high, mid low c2 second consonant c2_phonation phonation second consonant, voiceless voiced c2_place place second consonant, coronal velar","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform confidence intervals to cartesian — transform_ci","title":"Transform confidence intervals to cartesian — transform_ci","text":"returns cartesian coordinates confidence intervals polar gam/bam.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform confidence intervals to cartesian — transform_ci","text":"","code":"transform_ci(predictions, origin = NULL)"},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform confidence intervals to cartesian — transform_ci","text":"predictions data frame containing predictions obtained polar gam/bam. origin coordinates origin vector c(x, y) coordinates.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform confidence intervals to cartesian — transform_ci","text":"object class tbl_df-class (tibble).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the coordinates of spline data — transform_coord","title":"Transform the coordinates of spline data — transform_coord","text":"function transforms coordinates spline data Cartesian polar coordinate systems. origin x y coordinates can supplied user, calculated automatically (see Details).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the coordinates of spline data — transform_coord","text":"","code":"transform_coord(   data,   to = \"polar\",   origin = NULL,   fan_lines = c(10, 25),   use_XY = FALSE )"},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the coordinates of spline data — transform_coord","text":"data data set containing spline coordinates (cartesian coordinates must columns named X Y, polar coordinates columns named angle radius; defaults data imported read_aaa()). system convert , string, either \"polar\" \"cartesian\" (default \"polar\"). origin coordinates origin vector c(x, y) coordinates. fan_lines numeric vector two fan lines (default c(10, 25)). use_XY Whether use column names X Y converting polar coordinates, rather default angle radius (default FALSE. TRUE, columns X Y overwritten converted values. converting polar, X angle Y radius.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the coordinates of spline data — transform_coord","text":"object class tbl_df-class (tibble).","code":""},{"path":"https://stefanocoretta.github.io/rticulate/reference/transform_coord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform the coordinates of spline data — transform_coord","text":"transformation coordinate systems require selection origin Cartesian coordinates (x y). origin ideally corresponds virtual origin ultrasound waves probe. origin coordinates can supplied user vector origin argument, can estimated automatically origin = NULL (default). estimation performed get_origin (see function documentation details).","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"breaking-2-0-0","dir":"Changelog","previous_headings":"","what":"BREAKING","title":"rticulate v2.0.0","text":"read_aaa() now can read AAA data existing headers, fan-line DeepLabCut data. Now column starting X Y selected pivoting format = \"long\" (default). enhancement brought breaking changes: order arguments changed. argument fan_line doesn’t default , specified. plot_polar_smooths() deprecated due removal tidymv now anything. alternative soon added. time , can extract predictions tidygam::predict_gam() convert Cartesian coordinates manually.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-2-0-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v2.0.0","text":"read_ag500_pos() read .pos files Carstens AG500 electro-magnetic-articulographer. filter_signal() filter signal Savitzky-Golay Butterworth filter. resample_signal() /-sample signal using interpolation. get_velocity() get_acceleration() calculate velocity acceleration (first second derivative) displacement. get_landmarks() get several gestural landmarks displacement single gesture.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"rticulate-v174","dir":"Changelog","previous_headings":"","what":"rticulate v1.7.4","title":"rticulate v1.7.4","text":"CRAN release: 2024-12-06 Fix CRAN note language field.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"rticulate-v173","dir":"Changelog","previous_headings":"","what":"rticulate v1.7.3","title":"rticulate v1.7.3","text":"CRAN release: 2022-09-04","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-7-3","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.7.3","text":"Zenodo DOI Readme, plus Readme updates.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"developer-1-7-3","dir":"Changelog","previous_headings":"","what":"Developer","title":"rticulate v1.7.3","text":"Fix CRAN notes HTML5.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"rticulate-v172","dir":"Changelog","previous_headings":"","what":"rticulate v1.7.2","title":"rticulate v1.7.2","text":"CRAN release: 2021-01-11","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-7-2","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.7.2","text":"📝 - @return filled documentation functions.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-7-2","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.7.2","text":"📝 - Use \\donttest instead \\dontrun.","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-7-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.7.0","text":"rticulate logo! Use GitHub Actions R CMD check.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-7-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.7.0","text":"use tidy::pivot_longer() tidy::pivot_wider() read_aaa_data() add .index column read_aaa_data() output group contours needed. changed index name polar-gams.Rmd vignette. Now uses README.Rmd.","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"removed-1-7-0","dir":"Changelog","previous_headings":"","what":"Removed","title":"rticulate v1.7.0","text":"Remove Travis CI (use GitHub Actions).","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-6-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.6.0","text":"expand documentation transform_coordinates() get_origin() better handling fit errors get_origin()","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"deprecated-1-6-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"rticulate v1.6.0","text":"geom_polar_ci(), see vignette “polar-gam” working alternative","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-5-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.5.0","text":"examples predict_polar_gam() plotting","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-5-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.5.0","text":"extend polar-gam.Rmd","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"deprecated-1-5-0","dir":"Changelog","previous_headings":"","what":"Deprecated","title":"rticulate v1.5.0","text":"⚠️ time_series now deprecated replaced series. time_series removed future releases.","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-4-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.4.0","text":"examples docs section polar-gams.Rmd multiple predictors function predict_polar_gam() geom geom_polar_ci()","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-3-5","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.3.5","text":"README now uses new install_github argument building vignettes","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-3-4","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.3.4","text":"support NULL comparison argument plot_polar_smooths()","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"fixed-1-3-4","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rticulate v1.3.4","text":"error rlang update","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-3-3","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.3.3","text":"split argument splitting factor interactions separate factors","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-3-2","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.3.2","text":"argument read_aaa() choosing format (wide long)","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-3-2","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.3.2","text":"removed tidymv version README","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"fixed-1-3-2","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rticulate v1.3.2","text":"polar GAMs vignette title error Polar GAMs vignette error using AR.start","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"fixed-1-3-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rticulate v1.3.1","text":"fix several bugs fix issue #1","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-3-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.3.0","text":"functions transforming coordinates vignette coordinates transformation polar gams","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-3-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.3.0","text":"dropped levels tongue data set use underscores names everywhere","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-2-0","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.2.0","text":"argument read_aaa choose coordinate system read_aaa_data internal use it02 data example vignette multiple import added point path options plot_tongue","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"changed-1-2-0","dir":"Changelog","previous_headings":"","what":"Changed","title":"rticulate v1.2.0","text":"updates NEWS.md clarified documentation read_aaa can now accept list files column fan now properly named fan.line data names renamed plot_splines plot_tongue","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"fixed-1-2-0","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rticulate v1.2.0","text":"name package documentation name vignette title README","code":""},{"path":[]},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"added-1-0-1","dir":"Changelog","previous_headings":"","what":"Added","title":"rticulate v1.0.1","text":"depends imports DESCRIPTION globalVariables data frame variables functions NEWS.md","code":""},{"path":"https://stefanocoretta.github.io/rticulate/news/index.html","id":"fixed-1-0-1","dir":"Changelog","previous_headings":"","what":"Fixed","title":"rticulate v1.0.1","text":"data documentation (wrong variable names) missing parameter plot_splines missing stats:: read_aaa aes call caused notes R CMD check using aes_","code":""}]
